library(data.table)
install.packages(data.table)
install.packages("data.table")
install.packages("data.table")
names(SAP)
SAP <- read_excel("C:/Users/sridhar.upadhya/Desktop/R/DevOps Change_Task report.xlsx")
names(SAP)
SAP <- read_excel("C:/Users/sridhar.upadhya/Desktop/R/DevOps Change_Task report.xlsx")
setwd("C:/Users/sridhar.upadhya/Desktop/R")
##Validates Change tickets with Migration list entries for the below
##   - Status of all the open change tickets
##   - Number of Applications for a specific version matches with the number of rows in Remedy list
##   - Environment present in Migration list is 'P' then UCD Environment name should have Prod. V to have MO, D to have Perf
## Author: Sridhar Upadhya
## Date: 25-10-2017
install.packages("data.table")
install.packages("dplyr")
install.packages("readxl")
install.packages("lubridate")
setwd("C:/Users/sridhar.upadhya/Desktop/R")
rm(list=ls())
library(readxl)
library(dplyr)
library(data.table)
library(lubridate)
## Read Migration list file
Migration <- read_excel("C:/Users/sridhar.upadhya/Desktop/R/Migration list.xlsx")
View(Migration)
## Filter to get open Migration requests from Migration list entries
MigrationReq <- data.frame(filter(Migration, Migration$`Migration Status` == 'Move Request' |
Migration$`Migration Status` == 'ART Move Request'))
## Pick todays date and get the month from it, to filter Mig list for production version month
date <- Sys.Date()
x <- month(date)
if (x == 1){
z <- MigrationReq %>% filter(grepl("Jan", MigrationReq$Production.Version))
} else if (x == 2){
z <- MigrationReq %>% filter(grepl("Feb", MigrationReq$Production.Version))
} else if (x == 3){
z <- MigrationReq %>% filter(grepl("Mar", MigrationReq$Production.Version))
} else if (x == 4){
z <- MigrationReq %>% filter(grepl("Apr", MigrationReq$Production.Version))
} else if (x == 5){
z <- MigrationReq %>% filter(grepl("May", MigrationReq$Production.Version))
} else if (x == 6){
z <- MigrationReq %>% filter(grepl("Jun", MigrationReq$Production.Version))
} else if (x == 7){
z <- MigrationReq %>% filter(grepl("Jul", MigrationReq$Production.Version))
} else if (x == 8){
z <- MigrationReq %>% filter(grepl("Aug", MigrationReq$Production.Version))
} else if (x == 9){
z <- MigrationReq %>% filter(grepl("Sep", MigrationReq$Production.Version))
} else if (x == 10){
z <- MigrationReq %>% filter(grepl("Oct", MigrationReq$Production.Version))
} else if (x == 11){
z <- MigrationReq %>% filter(grepl("Nov", MigrationReq$Production.Version))
} else {
z <- MigrationReq %>% filter(grepl("Dec", MigrationReq$Production.Version))
}
## Migration list sorted based on Application name, component name and version name
MigrationFinal <- data.frame(z[order(z$UCD.Application.Name, z$UCD.Component.Name, z$UCD.Version.Name),])
## Read Change request extract
SAP <- read_excel("C:/Users/sridhar.upadhya/Desktop/R/DevOps Change_Task report.xlsx")
## Select required columns
names(SAP)
SAP1 <-
SAP1 <- data.frame(SAP$`Change ID`, SAP$Environment, SAP$`Scheduled Start Date`, SAP$Status,
SAP$Submitter, SAP$`Task Id`, SAP$UCD_Application_Name, SAP$UCD_Process_Name,
SAP$UCD_Environment_Name, SAP$UCD_Snapshot_Name)
## Filter for Claim team members
SAP2 <- data.frame(filter(SAP1, SAP1$SAP.Submitter == 'oses_prod'  |
SAP1$SAP.Submitter == 'ppushpam'  | SAP1$SAP.Submitter == 'araichur' |
SAP1$SAP.Submitter == 'rdogra' ))
## Filter for Open requests
SAP3 <- data.frame(filter(SAP2, SAP2$SAP.Status != 'Closed' & SAP2$SAP.Status != 'Completed' & SAP2$SAP.Status != 'Cancelled' ))
SAP4 <- data.frame(SAP3[rowSums(is.na(SAP3)) == 0,])  # Eliminate blank application names
SAPFinal <- SAP3 %>% filter(grepl("CM_", SAP.UCD_Application_Name)) # Pick Claim apps which starts from CM_
#Issue - Adhoc tasks and ITOC requests are not coming up
## Set of open Change requests (Issue - User oses_prod is being used by other teams hence we are getting other open requests also)
OpenRequests <- data.frame(unique(SAP3[,1:5]))
names(SAP)
SAP1 <- select(Change ID)
SAP1 = select(Change ID)
SAP1 = select(SAP, Change ID)
head(SAP)
select(SAP, Change ID)
select(SAP, Environment)
select(SAP, Environment, "Change ID")
names(SAP)
SAP1 = select(SAP, "Change ID", "Coordinator Org", "Change Coordinator", "Environment",
"Scheduled Start Date", "Summary", "Impacted Department", "Status", "Submitter",
"Submit Date", "Requested By - Customer Name", "Product Name", "Task Id",
"UCD_Application_Name", "UCD_Process_Name", "UCD_Environment_Name")
View(SAP1)
SAP2 = filter(SAP1, "Coordinator Org" == "Claim IT" && "Impacted Department" == "Dev Ops")
View(SAP2)
SAP2 = filter(SAP1, "Coordinator Org" == "Claim IT" & "Impacted Department" == "Dev Ops")
View(SAP2)
View(SAP1)
SAP2 = filter(SAP1, "Coordinator Org" == "Claim IT" & "Impacted Department" == "Dev Ops")
SAP2 = filter(SAP1, "Coordinator Org" = "Claim IT" & "Impacted Department" = "Dev Ops")
SAP2 = filter(SAP1, "Coordinator Org" == "Claim IT" & "Impacted Department" == "Dev Ops")
View(SAP1)
SAP2 = filter(SAP1, "Coordinator Org" == "Claim IT" )
View(SAP2)
SAP2 = filter(SAP1, SAP1$`Coordinator Org` == "Claim IT" )
View(SAP2)
SAP2 = filter(SAP1, SAP1$`Coordinator Org` == "Claim IT" && SAP1$`Impacted Department` == "Dev Ops")
View(SAP2)
SAP2 = filter(SAP1, SAP1$`Coordinator Org` == "Claim IT" &
SAP1$`Impacted Department` == "Dev Ops")
View(SAP2)
SAP2 = filter(SAP1, SAP1$`Coordinator Org` == "Claim IT" &
SAP1$`Impacted Department` == "Dev Ops" & SAP1$Status != ("Completed", "Cancelled"))
SAP2 = filter(SAP1, SAP1$`Coordinator Org` == "Claim IT" &
SAP1$`Impacted Department` == "Dev Ops" &
SAP1$Status != "Completed" &
SAP1$Status != "Cancelled")
View(SAP2)
SAP3 = arrange(SAP2, SAP2$UCD_Application_Name)
View(SAP3)
SAP3 = arrange(SAP2, SAP2$UCD_Application_Name, na.rm = T)
SAP3 = SAP3[,na.rm = T]
??na.rm
?na.rm
class(SAP3)
S <- mean(SAP3$UCD_Application_Name, na.rm = T)
View(S)
SAP3 <- mean(SAP3$UCD_Application_Name, na.rm = T)
View(SAP3)
SAP4 <- data.frame(SAP3[rowSums(is.na(SAP3)) == 0,])
View(SAP4)
##Validates Change tickets with Migration list entries for the below
##   - Status of all the open change tickets
##   - Number of Applications for a specific version matches with the number of rows in Remedy list
##   - Environment present in Migration list is 'P' then UCD Environment name should have Prod. V to have MO, D to have Perf
## Author: Sridhar Upadhya
## Date: 25-10-2017
install.packages("data.table")
install.packages("dplyr")
install.packages("readxl")
install.packages("lubridate")
setwd("C:/Users/sridhar.upadhya/Desktop/R")
rm(list=ls())
library(readxl)
library(dplyr)
library(data.table)
library(lubridate)
## Read Migration list file
Migration <- read_excel("C:/Users/sridhar.upadhya/Desktop/R/Migration list.xlsx")
View(Migration)
## Filter to get open Migration requests from Migration list entries
MigrationReq <- data.frame(filter(Migration, Migration$`Migration Status` == 'Move Request' |
Migration$`Migration Status` == 'ART Move Request'))
## Pick todays date and get the month from it, to filter Mig list for production version month
date <- Sys.Date()
x <- month(date)
if (x == 1){
z <- MigrationReq %>% filter(grepl("Jan", MigrationReq$Production.Version))
} else if (x == 2){
z <- MigrationReq %>% filter(grepl("Feb", MigrationReq$Production.Version))
} else if (x == 3){
z <- MigrationReq %>% filter(grepl("Mar", MigrationReq$Production.Version))
} else if (x == 4){
z <- MigrationReq %>% filter(grepl("Apr", MigrationReq$Production.Version))
} else if (x == 5){
z <- MigrationReq %>% filter(grepl("May", MigrationReq$Production.Version))
} else if (x == 6){
z <- MigrationReq %>% filter(grepl("Jun", MigrationReq$Production.Version))
} else if (x == 7){
z <- MigrationReq %>% filter(grepl("Jul", MigrationReq$Production.Version))
} else if (x == 8){
z <- MigrationReq %>% filter(grepl("Aug", MigrationReq$Production.Version))
} else if (x == 9){
z <- MigrationReq %>% filter(grepl("Sep", MigrationReq$Production.Version))
} else if (x == 10){
z <- MigrationReq %>% filter(grepl("Oct", MigrationReq$Production.Version))
} else if (x == 11){
z <- MigrationReq %>% filter(grepl("Nov", MigrationReq$Production.Version))
} else {
z <- MigrationReq %>% filter(grepl("Dec", MigrationReq$Production.Version))
}
## Migration list sorted based on Application name, component name and version name
MigrationFinal <- data.frame(z[order(z$UCD.Application.Name, z$UCD.Component.Name, z$UCD.Version.Name),])
## Read Change request extract
SAP <- read_excel("C:/Users/sridhar.upadhya/Desktop/R/DevOps Change_Task report.xlsx")
## Select required columns
names(SAP)
SAP1 = select(SAP, "Change ID", "Coordinator Org", "Change Coordinator", "Environment",
"Scheduled Start Date", "Summary", "Impacted Department", "Status", "Submitter",
"Submit Date", "Requested By - Customer Name", "Product Name", "Task Id",
"UCD_Application_Name", "UCD_Process_Name", "UCD_Environment_Name")
SAP2 = filter(SAP1, SAP1$`Coordinator Org` == "Claim IT" &
SAP1$`Impacted Department` == "Dev Ops" &
SAP1$Status != "Completed" &
SAP1$Status != "Cancelled")
SAP3 = arrange(SAP2, SAP2$UCD_Application_Name)
SAP4 <- data.frame(SAP3[rowSums(is.na(SAP3)) == 0,])
View(SAP4)
install.packages("data.table")
## Date: 25-10-2017
setwd("C:/Users/sridhar.upadhya/Desktop/R")
